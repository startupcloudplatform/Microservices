# my global config
global:
  scrape_interval:     1m # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 1m # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

# Alertmanager configuration
alerting:
  alertmanagers:
  - static_configs:
    - targets:
      # - alertmanager:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  # - "first_rules.yml"
  # - "second_rules.yml"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: 'prometheus'

    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.

    static_configs:
    - targets: ['localhost:8080']

  - job_name: 'microservice'
    metrics_path: '/prometheus'
    basic_auth:
      username: admin
      password_file: password_file
    file_sd_configs:
      - files:
        - ./targets.json

  - job_name: 'microservice-backend'
    metrics_path: '/prometheusmetrics'
    params:
      service: ["${BACKEND_SERVICES}"]
    basic_auth:
      username: admin
      password_file: password_file
    file_sd_configs:
      - files:
        - ./targets-backend.json
    relabel_configs:
    - source_labels: [__param_service]
      separator: ;
      regex: (.*)
      target_label: instance
      replacement: ${1}
      action: replace
    - source_labels: [__address__]
      separator: ;
      regex: (.*)
      target_label: job
      replacement: ${1}
      action: replace
