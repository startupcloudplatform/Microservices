user             vcap;
worker_processes <%= p('nginx.worker_processes') %>;
daemon           off;

error_log /var/vcap/sys/log/nginx/nginx_error.log;
pid       /var/vcap/sys/run/nginx/nginx.pid;

events {
  use                epoll;
  multi_accept       on;
  worker_connections <%= p('nginx.worker_connections') %>;
}

http {
  include       /var/vcap/packages/nginx/conf/mime.types;
  default_type  text/html;
  server_tokens off;

  access_log /var/vcap/sys/log/nginx/nginx_access.log;

  sendfile    on;
  tcp_nopush  on;
  tcp_nodelay on;

  <% if_p('nginx.client_header_buffer_size') do |client_header_buffer_size| %>
  client_header_buffer_size <%= client_header_buffer_size %>;
  <% end %>
  <% if_p('nginx.large_client_header_buffers.number', 'nginx.large_client_header_buffers.size') do |number, size| %>
  large_client_header_buffers <%= number %> <%= size %>;
  <% end %>

  types_hash_max_size 2048;

  send_timeout 2;

  client_max_body_size    <%= p('nginx.max_upload_size') %>;
  client_body_buffer_size 128k;
  client_body_timeout     10;
  client_header_timeout   30;

  keepalive_timeout         <%= p('nginx.keepalive_timeout') %>;
  keepalive_requests        10000;
  reset_timedout_connection on;

  open_file_cache          max=1000 inactive=120s;
  open_file_cache_valid    120s;
  open_file_cache_min_uses 1;
  open_file_cache_errors   on;

  gzip                on;
  gzip_http_version   1.1;
  gzip_vary           on;
  gzip_comp_level     6;
  gzip_proxied        any;
  gzip_types          text/plain text/css application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;
  gzip_buffers        16 8k;
  gzip_disable        "MSIE [1-6]\.(?!.*SV1)";



  <% if_link('grafana') do |grafana| %>
  upstream grafana {
    <% grafana.instances.map do |instance| %>
    server <%= "#{instance.address}:#{grafana.p('grafana.listen_port')} fail_timeout=0;" %>
    <% end %>
  }

  server {
    listen                  <%= p('nginx.grafana.http_port') %>;
    server_name             <%= p('nginx.grafana.server_name') %>;
    server_name_in_redirect off;

    ssl off;

    <% if p('nginx.ssl_only') %>
    return 301 https://$host$request_uri;
    <% else %>
    include /var/vcap/jobs/nginx/config/grafana_location.conf;
    <% end %>

    <% p('nginx.grafana.headers').each do |key, value| %>
    add_header "<%= key %>" "<%= value %>";
    <% end %>
  }

  <% if_p('nginx.ssl_cert', 'nginx.ssl_key') do %>
  server {
    listen                  <%= p('nginx.grafana.https_port') %>;
    server_name             <%= p('nginx.grafana.server_name') %>;
    server_name_in_redirect off;

    ssl                       on;
    ssl_prefer_server_ciphers on;
    ssl_protocols             <%= p('nginx.ssl_protocols') %>;
    ssl_ciphers               <%= p('nginx.ssl_ciphers') %>;
    ssl_certificate           /var/vcap/jobs/nginx/config/ssl_cert.pem;
    ssl_certificate_key       /var/vcap/jobs/nginx/config/ssl_key.pem;
    ssl_session_cache         <%= p('nginx.ssl_session_cache') %>;
    ssl_session_timeout       <%= p('nginx.ssl_session_timeout') %>;
    add_header                Strict-Transport-Security max-age=15768000;

    <% p('nginx.grafana.headers').each do |key, value| %>
    add_header "<%= key %>" "<%= value %>";
    <% end %>

    include /var/vcap/jobs/nginx/config/grafana_location.conf;
  }
  <% end %>
  <% end %>


}