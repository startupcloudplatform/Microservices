#!/bin/bash
# vim: set ft=sh

set -e

<%
  require "shellwords"

  def esc(x)
    Shellwords.shellescape(x)
  end
%>

RUN_DIR=/var/vcap/sys/run/studio
LOG_DIR=/var/vcap/sys/log/studio
PIDFILE=$RUN_DIR/studio.pid


source /var/vcap/packages/pid_utils/pid_utils.sh

<%
  postgres_host = ""
  postgres_port = ""
  postgres_role_name = ""
  postgres_role_password = ""
  postgres_database = ""
  postgres_sslmode = p("postgresql.sslmode", "verify-ca")

  traefik_web_host = ""
  traefik_web_port = ""
  traefik_protocol = "http"
  traefik_web_username = ""
  traefik_web_password = ""
  traefik_port = ""

  grafana_protocol = "http"
  grafana_web_host = ""
  grafana_web_port = ""
  grafana_admin_password = ""

  if_p("postgresql.address") do |addr|
    postgres_host, postgres_port = addr.split(":")
  end

  postgres_host = p("postgresql.host", "")
  postgres_port = p("postgresql.port")
  postgres_database = p("postgresql.database")
  postgres_role_name = p("postgresql.role.name")
  postgres_role_password = p("postgresql.role.password", "")

  if_link("db") do |db|
    postgres_host = db.instances.first.address
    postgres_port = db.p("bind_port")
    postgres_database = p("postgresql_database")

    postgres_db = db.p("databases").find { |db| db["name"] == postgres_database }
    if postgres_db.nil?
      raise "database '#{db_name}' not provided by 'postgresql' link"
    end

    postgres_role_name = postgres_db["role"]
    postgres_role_password = postgres_db["password"]
  end if postgres_host.empty?

  if_link("postgres") do |l|
    postgres_host = l.instances.first.address
  end if postgres_host.empty?

  if postgres_host.empty?
    raise "postgres.host not set and no 'db' or 'postgres' link available"
  end

  postgres_sslmode = p("postgresql.sslmode", "disable")

  if_link("traefik") do |traefik|
    traefik_web_host = traefik.instances.first.address
    traefik_web_port = traefik.p("traefik.web.port")
    traefik_web_username = traefik.p("traefik.web.basic_auth.username")
    traefik_web_password = traefik.p("traefik.web.basic_auth.password")

    if_p("traefik.web.tls.cert") do |protocol|
      traefik_protocol = "https"
    end

    traefik_port = traefik.p("traefik.http.port")
  end if traefik_web_host.empty?

  if traefik_web_host.empty?
    raise "traefik.host not set and no 'traefik' link available"
  end

  if_link("grafana") do |grafana|
    grafana_web_host = grafana.instances.first.address
    grafana_web_port = grafana.p("grafana.listen_port")
    grafana_admin_password = grafana.p("grafana.security.admin_password")

    if_p("grafana.ssl.cert") do |protocol|
      grafana_protocol = "https"
    end

  end
%>

case $1 in

  start)
    pid_guard $PIDFILE "studio"

    mkdir -p $RUN_DIR
    chown -R vcap:vcap $RUN_DIR

    mkdir -p $LOG_DIR
    chown -R vcap:vcap $LOG_DIR

    echo $$ > /var/vcap/sys/run/studio/studio.pid

    setcap cap_net_bind_service=+ep /var/vcap/packages/studio/bin/studio

    exec chpst -u vcap:vcap /var/vcap/packages/studio/bin/studio \
      --bind-ip <%= p("bind_ip") %> \
      --bind-port <%= p("bind_port") %> \
      <% if_p("tls_bind_port", "tls_cert", "tls_key") do |port, _, _| %> \
      --tls-bind-port <%= port %> \
      --tls-cert /var/vcap/jobs/studio/config/tls_cert \
      --tls-key /var/vcap/jobs/studio/config/tls_key \
      <% end %> \
      --postgres-host <%= esc(postgres_host) %> \
      --postgres-port <%= esc(postgres_port) %> \
      --postgres-database <%= esc(postgres_database) %> \
      --postgres-sslmode <%= esc(postgres_sslmode) %> \
      --postgres-user <%= esc(postgres_role_name) %> \
      --postgres-password <%= esc(postgres_role_password) %> \
      --api-url <%= p('cf.api_url') %> \
      --uaa-url <%= p('cf.uaa_url') %> \
      --username <%= p('cf.username') %> \
      --password <%= p('cf.password') %> \
      --skip-cert-check <%= p('cf.skip_cert_check') %> \
      --client_id <%= p('cf.client_id') %> \
      --client_secret <%= p('cf.client_secret') %> \
      --traefik-api-url <%= traefik_protocol %>://<%= esc(traefik_web_host) %>:<%= traefik_web_port %> \
      --traefik-port <%= esc(traefik_port)  %> \
      --traefik-user <%= esc(traefik_web_username)  %> \
      --traefik-password <%= esc(traefik_web_password)  %> \
      --external-url <%= p('external_url') %> \
      --grafana-url <%= grafana_protocol %>://<%= esc(grafana_web_host) %>:<%= grafana_web_port %> \
      --grafana-port <%= esc(grafana_web_port)  %> \
      --grafana-admin-password <%= grafana_admin_password %> \
      1>>$LOG_DIR/studio.stdout.log \
      2>>$LOG_DIR/studio.stderr.log

    ;;

  stop)
    kill_and_wait $PIDFILE

    ;;

  *)
    echo "Usage: $0 {start|stop}"

    ;;

esac
